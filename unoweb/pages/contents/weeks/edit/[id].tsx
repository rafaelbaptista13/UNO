import { GetServerSideProps } from "next";
import Head from "next/head";
import ActivityCard from "../../../../components/contents/activity_card";
import ErrorCard from "../../../../components/utils/error_card";
import PageHeaderButtonCard from "../../../../components/utils/page_header_button_card";
import { api_server } from "../../../../config";

export type ActivitiesType = {
  id: number;
  week_number: number;
  number_of_videos: number;
  number_of_exercises: number;
  createdAt: string;
  updatedAt: string;
};

interface ContentWeekProps {
  week_number: number;
  activities: Array<ActivitiesType>;
  error?: boolean;
}

export default function EditWeek({
  week_number,
  activities,
  error,
}: ContentWeekProps) {
  return (
    <>
      <Head>
        <title>UNO - Conteúdos</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container px-4">
        <div className="row g-3 mt-2 mb-4">
          <PageHeaderButtonCard
            header_text={"Semana " + week_number + " - Editar atividades"}
            button_text="Nova atividade"
            button_action={() => {}}
          />
        </div>
        {error && (
          <div className="row g-3 my-2">
            <ErrorCard message="Ocorreu um erro ao obter as atividades. Por favor tente novamente." />
          </div>
        )}
        {activities.map(function (activity: ActivitiesType, index) {
          return (
            <div className="row g-3 my-1" key={activity.week_number}>
              <ActivityCard
                num={"1."}
                title={"Como se deve respirar?"}
                type={"video"}
                description={"Vídeo - 1m 24s"}
              />
            </div>
          );
        })}

        <div className="row g-3 my-2">
          <div className="col gap-3 d-flex justify-content-end">
            <button className="btn btn-success">Concluir</button>
            <button className="btn btn-danger">Cancelar</button>
          </div>
        </div>
      </div>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const week_number = context.query.id;

  // TODO: Get Activities

  let activities_request;
  try {
    activities_request = await fetch(`${api_server}/contents/weeks`, {
      method: "GET",
    });
  } catch (e) {
    console.log(e);
    return {
      props: {
        activities: [],
        error: true,
      },
    };
  }

  // Handle error
  if (activities_request.status !== 200) {
    return {
      props: {
        activities: [],
        error: true,
      },
    };
  }

  const activities_response = await activities_request.json();

  return {
    props: {
      week_number: week_number,
      activities: [],
    },
  };
};
