// Generated by view binder compiler. Do not edit!
package com.example.unomobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.unomobile.R;
import com.google.android.exoplayer2.ui.StyledPlayerView;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentQuestionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton editSubmission;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final View lineBreak;

  @NonNull
  public final ProgressBar loadingProgressBar;

  @NonNull
  public final TextView question;

  @NonNull
  public final MaterialCardView questionCard;

  @NonNull
  public final FrameLayout questionFrameLayout;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final AppCompatButton submit;

  @NonNull
  public final LinearLayout submitButtons;

  @NonNull
  public final TextView submittedMessage;

  @NonNull
  public final TextView teacherFeedback;

  @NonNull
  public final MaterialCardView teacherFeedbackCard;

  @NonNull
  public final TextView teacherFeedbackHeader;

  @NonNull
  public final MaterialCardView trophyCard;

  @NonNull
  public final TextView trophyHeader;

  @NonNull
  public final ImageView trophyImage;

  @NonNull
  public final TextView trophyName;

  @NonNull
  public final TextView type;

  @NonNull
  public final StyledPlayerView videoView;

  private FragmentQuestionBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatButton editSubmission, @NonNull ImageView imageView,
      @NonNull View lineBreak, @NonNull ProgressBar loadingProgressBar, @NonNull TextView question,
      @NonNull MaterialCardView questionCard, @NonNull FrameLayout questionFrameLayout,
      @NonNull RecyclerView recyclerView, @NonNull AppCompatButton submit,
      @NonNull LinearLayout submitButtons, @NonNull TextView submittedMessage,
      @NonNull TextView teacherFeedback, @NonNull MaterialCardView teacherFeedbackCard,
      @NonNull TextView teacherFeedbackHeader, @NonNull MaterialCardView trophyCard,
      @NonNull TextView trophyHeader, @NonNull ImageView trophyImage, @NonNull TextView trophyName,
      @NonNull TextView type, @NonNull StyledPlayerView videoView) {
    this.rootView = rootView;
    this.editSubmission = editSubmission;
    this.imageView = imageView;
    this.lineBreak = lineBreak;
    this.loadingProgressBar = loadingProgressBar;
    this.question = question;
    this.questionCard = questionCard;
    this.questionFrameLayout = questionFrameLayout;
    this.recyclerView = recyclerView;
    this.submit = submit;
    this.submitButtons = submitButtons;
    this.submittedMessage = submittedMessage;
    this.teacherFeedback = teacherFeedback;
    this.teacherFeedbackCard = teacherFeedbackCard;
    this.teacherFeedbackHeader = teacherFeedbackHeader;
    this.trophyCard = trophyCard;
    this.trophyHeader = trophyHeader;
    this.trophyImage = trophyImage;
    this.trophyName = trophyName;
    this.type = type;
    this.videoView = videoView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentQuestionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentQuestionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_question, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentQuestionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_submission;
      AppCompatButton editSubmission = ViewBindings.findChildViewById(rootView, id);
      if (editSubmission == null) {
        break missingId;
      }

      id = R.id.image_view;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.line_break;
      View lineBreak = ViewBindings.findChildViewById(rootView, id);
      if (lineBreak == null) {
        break missingId;
      }

      id = R.id.loading_progress_bar;
      ProgressBar loadingProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgressBar == null) {
        break missingId;
      }

      id = R.id.question;
      TextView question = ViewBindings.findChildViewById(rootView, id);
      if (question == null) {
        break missingId;
      }

      id = R.id.question_card;
      MaterialCardView questionCard = ViewBindings.findChildViewById(rootView, id);
      if (questionCard == null) {
        break missingId;
      }

      id = R.id.question_frame_layout;
      FrameLayout questionFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (questionFrameLayout == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.submit;
      AppCompatButton submit = ViewBindings.findChildViewById(rootView, id);
      if (submit == null) {
        break missingId;
      }

      id = R.id.submit_buttons;
      LinearLayout submitButtons = ViewBindings.findChildViewById(rootView, id);
      if (submitButtons == null) {
        break missingId;
      }

      id = R.id.submitted_message;
      TextView submittedMessage = ViewBindings.findChildViewById(rootView, id);
      if (submittedMessage == null) {
        break missingId;
      }

      id = R.id.teacher_feedback;
      TextView teacherFeedback = ViewBindings.findChildViewById(rootView, id);
      if (teacherFeedback == null) {
        break missingId;
      }

      id = R.id.teacher_feedback_card;
      MaterialCardView teacherFeedbackCard = ViewBindings.findChildViewById(rootView, id);
      if (teacherFeedbackCard == null) {
        break missingId;
      }

      id = R.id.teacher_feedback_header;
      TextView teacherFeedbackHeader = ViewBindings.findChildViewById(rootView, id);
      if (teacherFeedbackHeader == null) {
        break missingId;
      }

      id = R.id.trophy_card;
      MaterialCardView trophyCard = ViewBindings.findChildViewById(rootView, id);
      if (trophyCard == null) {
        break missingId;
      }

      id = R.id.trophy_header;
      TextView trophyHeader = ViewBindings.findChildViewById(rootView, id);
      if (trophyHeader == null) {
        break missingId;
      }

      id = R.id.trophy_image;
      ImageView trophyImage = ViewBindings.findChildViewById(rootView, id);
      if (trophyImage == null) {
        break missingId;
      }

      id = R.id.trophy_name;
      TextView trophyName = ViewBindings.findChildViewById(rootView, id);
      if (trophyName == null) {
        break missingId;
      }

      id = R.id.type;
      TextView type = ViewBindings.findChildViewById(rootView, id);
      if (type == null) {
        break missingId;
      }

      id = R.id.video_view;
      StyledPlayerView videoView = ViewBindings.findChildViewById(rootView, id);
      if (videoView == null) {
        break missingId;
      }

      return new FragmentQuestionBinding((LinearLayout) rootView, editSubmission, imageView,
          lineBreak, loadingProgressBar, question, questionCard, questionFrameLayout, recyclerView,
          submit, submitButtons, submittedMessage, teacherFeedback, teacherFeedbackCard,
          teacherFeedbackHeader, trophyCard, trophyHeader, trophyImage, trophyName, type,
          videoView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
