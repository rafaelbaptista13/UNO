// Generated by view binder compiler. Do not edit!
package com.example.unomobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.unomobile.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityListItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView activityImage;

  @NonNull
  public final TextView activityNumber;

  @NonNull
  public final TextView activityTitle;

  @NonNull
  public final TextView activityType;

  @NonNull
  public final MaterialCardView card;

  @NonNull
  public final ImageView completedIcon;

  private ActivityListItemBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageView activityImage, @NonNull TextView activityNumber,
      @NonNull TextView activityTitle, @NonNull TextView activityType,
      @NonNull MaterialCardView card, @NonNull ImageView completedIcon) {
    this.rootView = rootView;
    this.activityImage = activityImage;
    this.activityNumber = activityNumber;
    this.activityTitle = activityTitle;
    this.activityType = activityType;
    this.card = card;
    this.completedIcon = completedIcon;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_image;
      ImageView activityImage = ViewBindings.findChildViewById(rootView, id);
      if (activityImage == null) {
        break missingId;
      }

      id = R.id.activity_number;
      TextView activityNumber = ViewBindings.findChildViewById(rootView, id);
      if (activityNumber == null) {
        break missingId;
      }

      id = R.id.activity_title;
      TextView activityTitle = ViewBindings.findChildViewById(rootView, id);
      if (activityTitle == null) {
        break missingId;
      }

      id = R.id.activity_type;
      TextView activityType = ViewBindings.findChildViewById(rootView, id);
      if (activityType == null) {
        break missingId;
      }

      MaterialCardView card = (MaterialCardView) rootView;

      id = R.id.completed_icon;
      ImageView completedIcon = ViewBindings.findChildViewById(rootView, id);
      if (completedIcon == null) {
        break missingId;
      }

      return new ActivityListItemBinding((MaterialCardView) rootView, activityImage, activityNumber,
          activityTitle, activityType, card, completedIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
